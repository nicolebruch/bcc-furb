// Programa exemplo feito para rodar na M++ (versão 2.0.4 do Logisim)
CALL MENU;
CALL LERMENU;
FIM: JMP FIM;

MENU:
MOV 50, A; CALL WRITEA; //P
MOV 52, A; CALL WRITEA; //R
MOV 4F, A; CALL WRITEA; //O
MOV 47, A; CALL WRITEA; //G
MOV 52, A; CALL WRITEA; //R
MOV 41, A; CALL WRITEA; //A
MOV 4D, A; CALL WRITEA; //M
MOV 41, A; CALL WRITEA; //A
MOV 20, A; CALL WRITEA; 
MOV 45, A; CALL WRITEA; //E
MOV 58, A; CALL WRITEA; //X
MOV 45, A; CALL WRITEA; //E
MOV 4D, A; CALL WRITEA; //M
MOV 50, A; CALL WRITEA; //P
MOV 4C, A; CALL WRITEA; //L
MOV 4F, A; CALL WRITEA; //O
MOV 20, A; CALL WRITEA; 
MOV 4D, A; CALL WRITEA; //M
MOV 2B, A; CALL WRITEA; //+
MOV 2B, A; CALL WRITEA; //+
MOV 0A, A; CALL WRITEA; 
MOV 20, A; CALL WRITEA; 
MOV 31, A; CALL WRITEA; //1
MOV 29, A; CALL WRITEA; //)
MOV 53, A; CALL WRITEA; //S
MOV 4F, A; CALL WRITEA; //O
MOV 4D, A; CALL WRITEA; //M
MOV 41, A; CALL WRITEA; //A
MOV 52, A; CALL WRITEA; //R
MOV 0A, A; CALL WRITEA; 
MOV 20, A; CALL WRITEA; 
MOV 32, A; CALL WRITEA; //2
MOV 29, A; CALL WRITEA; //)
MOV 53, A; CALL WRITEA; //S
MOV 55, A; CALL WRITEA; //U
MOV 42, A; CALL WRITEA; //B
MOV 54, A; CALL WRITEA; //T
MOV 52, A; CALL WRITEA; //R
MOV 41, A; CALL WRITEA; //A
MOV 49, A; CALL WRITEA; //I
MOV 52, A; CALL WRITEA; //R
MOV 0A, A; CALL WRITEA;
RET;

LERMENU:
CALL LERINTA;
SUB 01, B;
JMPZ LEU1;
SUB 02, B;
JMPZ LEU2;
JMP LERMENU;
LEU1: CALL SOMAR;
JMP LERMENU;
LEU2: CALL SUBTRAIR;
JMP LERMENU;
RET;

SOMAR:
MOV 31, A; CALL WRITEA; //1
MOV 20, A; CALL WRITEA; //
MOV 53, A; CALL WRITEA; //S
MOV 4F, A; CALL WRITEA; //O
MOV 4D, A; CALL WRITEA; //M
MOV 41, A; CALL WRITEA; //A
MOV 52, A; CALL WRITEA; //R
MOV 3A, A; CALL WRITEA; //: 
MOV 20, A; CALL WRITEA; 
CALL LERINTA;
MOV A, C;
CALL WRITEINTA;
MOV 2B, A; CALL WRITEA; //+ 
CALL LERINTA;
MOV A, D;
CALL WRITEINTA;
MOV 3D, A; CALL WRITEA; //=
MOV C, A;
ADD D, A;
CALL WRITEINTA;
MOV 0A, A; CALL WRITEA;
RET;

SUBTRAIR:
MOV 32, A; CALL WRITEA; //2
MOV 20, A; CALL WRITEA; //
MOV 53, A; CALL WRITEA; //S
MOV 55, A; CALL WRITEA; //U
MOV 42, A; CALL WRITEA; //B
MOV 54, A; CALL WRITEA; //T
MOV 52, A; CALL WRITEA; //R
MOV 41, A; CALL WRITEA; //A
MOV 49, A; CALL WRITEA; //I
MOV 52, A; CALL WRITEA; //R
MOV 3A, A; CALL WRITEA; //: 
MOV 20, A; CALL WRITEA; 
CALL LERINTA;
MOV A, C;
CALL WRITEINTA;
MOV 2D, A; CALL WRITEA; //-
CALL LERINTA;
MOV A, D;
CALL WRITEINTA;
MOV 3D, A; CALL WRITEA; //=
MOV C, A;
SUB D, A;
CALL WRITEINTA;
MOV 0A, A; CALL WRITEA;
RET;

WRITEA:
MOV A, OUT0;
MOV 00, A;
MOV A, OUT1;
MOV 01, A;
MOV A, OUT1;
RET;

WRITEINTA:
AND 80, B;
JMPZ POSITIVO;
MOV A, B;
MOV 2D, A; CALL WRITEA; //-
MOV B, A;
NOT A, A;
INC A, A;
POSITIVO:
SUB 0A, B;
JMPC MENORQ10;
JMP MAIORQ10;
MENORQ10:
ADD 30, A; CALL WRITEA;
RET;
MAIORQ10:
MOV 31, A; CALL WRITEA;
MOV B, A;
JMP POSITIVO;

LERINTA:
MOV IN1, A;
SUB 01, B;
JMPZ DIGITOU;
JMP LERINTA;
DIGITOU:
MOV IN0, A;
MOV A, D;
MOV 00, A;
MOV A, OUT2;
MOV 01, A;
MOV A, OUT2;
MOV D, A;
//verificando se caracter digitado entre 0 a 9
SUB 30, A; //30 ascii = 0
JMPC LERINTA;
SUB 0A, B;
JMPC DIGNUM;
JMP LERINTA;
DIGNUM:
RET;